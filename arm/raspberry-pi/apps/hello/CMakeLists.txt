cmake_minimum_required (VERSION 3.7)
project (hello)

# The version number.
set (hello_VERSION_MAJOR 1)
set (hello_VERSION_MINOR 0)


if(UNIX AND NOT APPLE)
    set(LINUX TRUE)
endif()
include_directories("include/")
if(WASM)
    message(">>> WebAssembly - WASM=${WASM}")
    set(CMAKE_C_COMPILER "emcc")
    set(CMAKE_CXX_COMPILER "em++")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --bind --std=c++17 -s WASM=1 -s ALLOW_MEMORY_GROWTH=1")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}../../../webapp)
    if(WIN32)
        include_directories("D:/Apps/emsdk/fastcomp/emscripten/system/include")
    elseif(UNIX)
        include_directories("~/emsdk/emscripten/1.38.28/system/include/")
    endif()
    add_executable(myapp.html  src/myapp_js src/mycalc.cpp)
elseif(ARM)
    message(STATUS ">>> ARM")
    set(CMAKE_C_COMPILER "arm-none-eabi-gcc")
    set(CMAKE_CXX_COMPILER "arm-none-eabi-g++")
    set(BUILD_SHARED_LIBS OFF)
elseif(UNIX)
    message(STATUS ">>> Linux/OSx")
    set(BUILD_SHARED_LIBS OFF)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
elseif(WIN32)
    message(STATUS ">>> Windows")
    set(BUILD_SHARED_LIBS OFF)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
    add_compile_options("/std:c++17")
endif()

if(NOT WASM)
    add_executable(hello src/main.c src/mycalc.c)
endif()

